#
# Copyright (c) 2025 Red Hat Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with
# the License. You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the
# specific language governing permissions and limitations under the License.
#

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: fulfillment-database
spec:
  replicas: 1
  template:
    spec:
      serviceAccountName: fulfillment-database
      volumes:
      - name: server-cert
        secret:
          secretName: fulfillment-database-server-cert
          defaultMode: 0440
      - name: server-config
        configMap:
          name: fulfillment-database-server
      - name: access-config
        configMap:
          name: fulfillment-database-access
      - name: data
        persistentVolumeClaim:
          claimName: fulfillment-database
      initContainers:
      - name: password-generator
        image: openshift-cli
        command:
        - /bin/bash
        - -c
        - |
          if ! oc get secret fulfillment-database-password > /dev/null 2>&1; then
              echo "generating postgresql password"
              password=$(openssl rand -hex 20)
              oc create secret generic fulfillment-database-password \
                --from-literal POSTGRES_PASSWORD="$password"
          fi
      containers:
      - name: server
        image: postgres
        imagePullPolicy: IfNotPresent
        env:
        - name: POSTGRESQL_USER
          value: client
        - name: POSTGRESQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: fulfillment-database-password
              key: POSTGRES_PASSWORD
        - name: POSTGRESQL_DATABASE
          value: service
        volumeMounts:
        - name: data
          mountPath: /var/lib/postgresql
        - name: server-cert
          mountPath: /secrets/cert
        - name: server-config
          mountPath: /opt/app-root/src/postgresql-cfg
        - name: access-config
          mountPath: /config/access
        ports:
        - name: postgres
          protocol: TCP
          containerPort: 5432
