#
# Copyright (c) 2025 Red Hat Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with
# the License. You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the
# specific language governing permissions and limitations under the License.
#

apiVersion: apps/v1
kind: Deployment
metadata:
  name: fulfillment-service
spec:
  selector:
    matchLabels:
      app: fulfillment-service
  replicas: 1
  template:
    metadata:
      labels:
        app: fulfillment-service
    spec:
      volumes:
      - name: sockets
        emptyDir:
          medium: Memory
      - name: config
        configMap:
          name: fulfillment-service-config
      - name: cert
        secret:
          secretName: fulfillment-database-client-cert
      - name: envoy
        configMap:
          name: fulfillment-service-envoy
      - name: envoy-tls
        secret:
          secretName: fulfillment-service-tls
      - name: config-processed
        emptyDir:

      initContainers:
      - name: template-processor
        image: gomplate
        volumeMounts:
        - name: config
          mountPath: /src
        - name: config-processed
          mountPath: /dst
        args:
        - --input-dir=/src
        - --output-dir=/dst
        env:
          - name: NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace

      containers:

      - name: server
        image: fulfillment-service
        imagePullPolicy: IfNotPresent
        volumeMounts:
        - name: sockets
          mountPath: /run/sockets
        - name: config-processed
          mountPath: /etc/fulfillment-service
        - name: cert
          mountPath: /secrets/cert
        env:
          - name: NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: PGPASSWORD
            valueFrom:
              secretKeyRef:
                name: fulfillment-database-password
                key: POSTGRES_PASSWORD
        command:
        - /usr/local/bin/fulfillment-service
        - start
        - server
        - --log-level=debug
        - --log-headers=true
        - --log-bodies=true
        - "--db-url=postgres://client:$(PGPASSWORD)@fulfillment-database:5432/service?\
          sslmode=verify-full&\
          sslcert=/secrets/cert/tls.crt&\
          sslkey=/secrets/cert/tls.key&\
          sslrootcert=/secrets/cert/ca.crt"
        - --grpc-listener-network=unix
        - --grpc-listener-address=/run/sockets/server.socket
        - --grpc-authn-type=jwks
        - --grpc-authn-jwks-url=https://kubernetes.default.svc/openid/v1/jwks
        - --grpc-authn-jwks-ca-file=/run/secrets/kubernetes.io/serviceaccount/ca.crt
        - --grpc-authn-jwks-token-file=/run/secrets/kubernetes.io/serviceaccount/token
        - --grpc-authz-type=rules
        - --grpc-authz-rules-file=/etc/fulfillment-service/rules.yaml

      - name: gateway
        image: fulfillment-service
        imagePullPolicy: IfNotPresent
        volumeMounts:
        - name: sockets
          mountPath: /run/sockets
        command:
        - /usr/local/bin/fulfillment-service
        - start
        - gateway
        - --log-level=debug
        - --log-headers=true
        - --log-bodies=true
        - --http-listener-network=unix
        - --http-listener-address=/run/sockets/gateway.socket
        - --grpc-server-network=unix
        - --grpc-server-address=/run/sockets/server.socket
        - --grpc-server-plaintext

      - name: envoy
        image: envoy
        imagePullPolicy: IfNotPresent
        volumeMounts:
        - name: sockets
          mountPath: /run/sockets
        - name: envoy
          mountPath: /etc/envoy
        - name: envoy-tls
          mountPath: /etc/envoy/tls
        command:
        - envoy
        - --config-path
        - /etc/envoy/envoy.yaml
        ports:
        - name: api
          protocol: TCP
          containerPort: 8000
